<% content_for :title do %>Bubble Sort<% end %>

<h1>Bubble Sort</h1>
<p>Bubble sort is the most basic way to sort a collection. It works by sequentially going through your array and comparing two values at a time, swapping them if necessary. It then repeats the process until no swaps are required.

<h2>Implementation</h2>
<pre id="code1">
function sort(values) {
  <span class="line">var length = values.length - 1;</span>
  do {
    var swapped = false;
    <span class="line">for(var i = 0; i &lt; length; ++i) {</span>
      <span class="line">if (values[i] > values[i+1]) {</span>
        <span class="line">var temp = values[i];</span>
        <span class="line">values[i] = values[i+1];</span>
        <span class="line">values[i+1] = temp;</span>
        <span class="line">swapped = true;</span>
      }
    }
  }
  <span class="line">while(swapped == true)</span>
};
<span class="line">sort([7, 4, 5, 2, 9, 1]);</span>
<span class="line">//finished</span>
</pre>

<h2>Example</h2>
<p>Click <em>step</em> to sort the array. (This is a very slow algorithm, you probably want to give up once you have a general feel for it.)</p>
<div id="example1">
  <div class="nodeList">
    <div>7</div>
    <div>4</div>
    <div>5</div>
    <div>2</div>
    <div>9</div>
    <div>1</div>
  </div>
  <div class="step">step</div>
</div>

<h2>Characteristics</h2>
<p>As you've no doubt seen, bubble sort requires a lot of steps in order to sort even a short collection. In fact, sorting this collection required almost as many steps as all of the steps from the previous sections combined. It takes a lot of iterations and comparison to small values to their final destination.</p>

<p>There are two interesting things to know about bubble sorts. First, large values are always sorted first. If you run through it again (if you are insane), you'll notice that the 9 then the 7 then the 5 and so on get sorted first. Knowing this, we could make the code slightly smarter and stop repeatedly iterating over already sorted values.</p>

<p>The other interesting thing about a bubble sort is that it only takes one iteration to detect that a collection is already sorted. That is, if the first iteration doesn't set <code>swapped = true</code>, no additional iterations are required. However, this is not a unique property of bubble sorts.</p>

<h2>In The Real World</h2>
<p>There is no scenario in which a bubble sort is the most efficient way to sort (and more often than not it's much less efficient). In fact, many very influential people feel that it shouldn't be taught given how useless (and horrible) an algorithm it is.</p>

<p>Personally, I think it's still worth understanding.</p> 
<div id="nav">
  <a href="/search/binarysearch" id="prev">&laquo; binary search</a>
  <a href="/sort/insertionsort" id="next">insertion sort &raquo;</a>
</div>

<%= erb :disqus, :locals => {:identifier => '/algo/bubblesort'}%>

<script type="text/javascript">
$(document).ready(function()
{
  var $code1 = $('#code1').code({});
  $('#example1').example({
    code: $code1, 
    instructions: instructions.bubbleSort,
    init: instructions.bubbleSortInit
  });
});
</script>